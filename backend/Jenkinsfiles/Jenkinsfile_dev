def dockerRepository = ""
def dockerImageName = "ssafish_dev"
def dockerImageNameFront = "ssafish-fe"
def deployHost = "i9e202.p.ssafy.io"

pipeline {
    agent any

    tools {
        nodejs "front"
        gradle "back"

    }

    stages {
        stage('Checkout'){
            steps {

                checkout scm
            }
        }



        stage('Build') { //war 파일로 빌드된다.
            steps {



                withCredentials([usernamePassword(credentialsId: 'dockerhub-key',
                                 usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    script {
                        sh """
                        cd /var/jenkins_home/workspace/ssafish_dev/backend
                            chmod u+x ./gradlew
                            ./gradlew clean bootJar
                            """
                         sh """
                         cd /var/jenkins_home/workspace/ssafish_dev/frontend
                            npm install
                            npm run build
                        """
                    }
                }
            }
        }
        stage('Publish') { //도커허브에 게시된다.
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-key',
                                 usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    script {
                        sh """
                        cd /var/jenkins_home/workspace/ssafish_dev/backend
                        docker build -t ${dockerRepository}/${dockerImageName} .
                        docker login
                        docker push ${dockerRepository}/${dockerImageName}:latest

                        """

                        sh """
                        cd /var/jenkins_home/workspace/ssafish_dev/frontend

                        docker build -t ${dockerRepository}/${dockerImageNameFront} .
                        docker login
                        docker push ${dockerRepository}/${dockerImageNameFront}:latest

                        """
                    }
                }
            }
        } //docker image rm ${dockerRepository}/${dockerImageNameFront}



        stage('Deploy'){// ec2에 배포된다. 즉 이미지를 받아서 실행한다x.
            steps {
                sshagent(credentials: ["deploy-key"]) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ubuntu@i9e202.p.ssafy.io \
                    'docker rm -f ${dockerImageName} &&
                    docker rmi ${dockerRepository}/${dockerImageName} &&
                    docker run -d -t -p 5001:5001 -v /home/ubuntu/ssafish:/home/ssafish  --rm --name ${dockerImageName} ${dockerRepository}/${dockerImageName}:latest;'
                    """


                    sh """
                     ssh -o StrictHostKeyChecking=no ubuntu@i9e202.p.ssafy.io \
                     'docker rm -f ${dockerImageNameFront} &&
                     docker rmi ${dockerRepository}/${dockerImageNameFront} &&
                      docker run -d -t -p 5173:5173 --rm --name ${dockerImageNameFront} ${dockerRepository}/${dockerImageNameFront}:latest;'

                    """

                }
            }
        }
    }

}



